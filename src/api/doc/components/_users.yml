---
openapi: 3.0.0

tags:
  - name: Users
    description: Everything about Users

paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: return list of all users
    post:
      tags:
        - Users
      summary: Add a new user to the store
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: return created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Get a user with a userId
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Return a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - Users
      summary: Update an existing user
      security:
        - bearerAuth: []
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Return updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
        - Users
      summary: Delete an existing user
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
      required:
        - id
        - email
        - password
      example:
        email: user@email.com
        password: password
    